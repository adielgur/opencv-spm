name: Release

on:
  workflow_dispatch:
    inputs:
      build_run_id:
        description: "The ID of the workflow run from which to download the artifact"
        required: true
        default: "10613555662"
        type: string

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get Artifact Info
        id: get_artifact_info
        run: |
          ARTIFACT_URL=$(curl -s \
          -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          -H "Accept: application/vnd.github.v3+json" \
          https://api.github.com/repos/${{ github.repository }}/actions/runs/${{ github.event.inputs.build_run_id }}/artifacts \
          | jq -r '.artifacts[] | select(.name == "opencv2.xcframework.zip") | .archive_download_url')
          echo "ARTIFACT_URL=${ARTIFACT_URL}" >> $GITHUB_ENV

      - name: Download Artifact
        run: |
          curl -L -o opencv2.xcframework.zip \
          -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          ${{ env.ARTIFACT_URL }}

      - name: Get version
        id: get_version
        run: |
          VERSION=$(cat .version)
          if git rev-parse -q --verify "refs/tags/${VERSION}" >/dev/null; then
            PATCH=$(git rev-list --count "refs/tags/${VERSION}..HEAD")
            VERSION="${VERSION}+${PATCH}"
          fi
          echo "VERSION=${VERSION}" >> $GITHUB_OUTPUT

      - name: Update Package.swift
        run: |
          sed -i "s/let version = \".*\"/let version = \"${{ steps.get_version.outputs.VERSION }}\"/" Package.swift
          sed -i "s/let checksum = \".*\"/let checksum = \"$(shasum -a 256 opencv2.xcframework.zip | cut -d ' ' -f 1)\"/" Package.swift

      - name: Commit and push
        run: |
          git pull
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "GitHub Actions"
          git add Package.swift
          git commit -m "Update Package.swift"
          git push

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: opencv2.xcframework.zip
          tag_name: ${{ steps.get_version.outputs.VERSION }}
